# - Try to find KMSMEETRIXKURENTOHELLOWORLD library

#=============================================================================
# Copyright 2014 Kurento
#
#=============================================================================

set(PACKAGE_VERSION "")
set(KMSMEETRIXKURENTOHELLOWORLD_VERSION ${PACKAGE_VERSION})

message (STATUS "Looking for KMSMEETRIXKURENTOHELLOWORLD: ")

include (GenericFind)

generic_find (
  REQUIRED
  LIBNAME KMSCORE
  VERSION ^6.0.0
)

generic_find (
  REQUIRED
  LIBNAME KMSELEMENTS
  VERSION ^6.0.0
)

generic_find (
  REQUIRED
  LIBNAME KMSFILTERS
  VERSION ^6.0.0
)

set (REQUIRED_VARS
  KMSMEETRIXKURENTOHELLOWORLD_VERSION
  KMSMEETRIXKURENTOHELLOWORLD_INCLUDE_DIRS
  KMSMEETRIXKURENTOHELLOWORLD_LIBRARY
  KMSMEETRIXKURENTOHELLOWORLD_LIBRARIES
)

set (KMSMEETRIXKURENTOHELLOWORLD_BINARY_DIR_PREFIX "build" CACHE PATH "Path prefix used to look for binary files")
set (KMSMEETRIXKURENTOHELLOWORLD_SOURCE_DIR_PREFIX "" CACHE PATH "Path prefix used to look for source files")

set(KMSMEETRIXKURENTOHELLOWORLD_INCLUDE_DIRS
  ${KMSCORE_INCLUDE_DIRS}
  ${KMSELEMENTS_INCLUDE_DIRS}
  ${KMSFILTERS_INCLUDE_DIRS}
)

if (NOT "MeetrixKurentoHelloWorld.hpp MeetrixKurentoHelloWorldInternal.hpp" STREQUAL " ")
  if (TARGET kmsmeetrixkurentohelloworldinterface)
    set (KMSMEETRIXKURENTOHELLOWORLD_INTERFACE_INCLUDE_DIR "${KMSMEETRIXKURENTOHELLOWORLD_BINARY_DIR_PREFIX}/server/interface/generated-cpp")
  else ()
    find_path(KMSMEETRIXKURENTOHELLOWORLD_INTERFACE_INCLUDE_DIR
      NAMES
        MeetrixKurentoHelloWorld.hpp
        MeetrixKurentoHelloWorldInternal.hpp
      PATH_SUFFIXES
        ${KMSMEETRIXKURENTOHELLOWORLD_BINARY_DIR_PREFIX}/server/interface/generated-cpp
        kurento/modules/meetrixkurentohelloworld
    )
  endif ()

  list (APPEND KMSMEETRIXKURENTOHELLOWORLD_INCLUDE_DIRS ${KMSMEETRIXKURENTOHELLOWORLD_INTERFACE_INCLUDE_DIR})
  list (APPEND REQUIRED_VARS KMSMEETRIXKURENTOHELLOWORLD_INTERFACE_INCLUDE_DIR)
endif ()

if (NOT "MeetrixKurentoHelloWorldImplFactory.hpp" STREQUAL "")
  if (TARGET kmsmeetrixkurentohelloworldimpl)
    set (KMSMEETRIXKURENTOHELLOWORLD_IMPLEMENTATION_INTERNAL_INCLUDE_DIR "${KMSMEETRIXKURENTOHELLOWORLD_BINARY_DIR_PREFIX}/server/implementation/generated-cpp")
  else ()
    find_path(KMSMEETRIXKURENTOHELLOWORLD_IMPLEMENTATION_INTERNAL_INCLUDE_DIR
      NAMES
        MeetrixKurentoHelloWorldImplFactory.hpp
      PATH_SUFFIXES
        ${KMSMEETRIXKURENTOHELLOWORLD_BINARY_DIR_PREFIX}/server/implementation/generated-cpp
        kurento/modules/meetrixkurentohelloworld
    )
  endif ()

  list (APPEND KMSMEETRIXKURENTOHELLOWORLD_INCLUDE_DIRS ${KMSMEETRIXKURENTOHELLOWORLD_IMPLEMENTATION_INTERNAL_INCLUDE_DIR})
  list (APPEND REQUIRED_VARS KMSMEETRIXKURENTOHELLOWORLD_IMPLEMENTATION_INTERNAL_INCLUDE_DIR)
endif ()

if (NOT "MeetrixKurentoHelloWorldOpenCVImpl.hpp MeetrixKurentoHelloWorldImpl.hpp" STREQUAL "")
  if (TARGET kmsmeetrixkurentohelloworldimpl)
    set (KMSMEETRIXKURENTOHELLOWORLD_IMPLEMENTATION_GENERATED_INCLUDE_DIR "${KMSMEETRIXKURENTOHELLOWORLD_SOURCE_DIR_PREFIX}/${KMSMEETRIXKURENTOHELLOWORLD_BINARY_DIR_PREFIX}/server/implementation/objects")
  else ()
    find_path(KMSMEETRIXKURENTOHELLOWORLD_IMPLEMENTATION_GENERATED_INCLUDE_DIR
      NAMES
        MeetrixKurentoHelloWorldOpenCVImpl.hpp MeetrixKurentoHelloWorldImpl.hpp
      PATH_SUFFIXES
        ${KMSMEETRIXKURENTOHELLOWORLD_BINARY_DIR_PREFIX}/server/implementation/objects
        kurento/modules/meetrixkurentohelloworld
    )
  endif ()

  list (APPEND KMSMEETRIXKURENTOHELLOWORLD_INCLUDE_DIRS ${KMSMEETRIXKURENTOHELLOWORLD_IMPLEMENTATION_GENERATED_INCLUDE_DIR})
  list (APPEND REQUIRED_VARS KMSMEETRIXKURENTOHELLOWORLD_IMPLEMENTATION_GENERATED_INCLUDE_DIR)
endif()

if (NOT "" STREQUAL "")
  if (TARGET kmsmeetrixkurentohelloworldimpl)
    set (KMSMEETRIXKURENTOHELLOWORLD_IMPLEMENTATION_EXTRA_INCLUDE_DIR "${KMSMEETRIXKURENTOHELLOWORLD_SOURCE_DIR_PREFIX}/")
  else ()
    find_path(KMSMEETRIXKURENTOHELLOWORLD_IMPLEMENTATION_EXTRA_INCLUDE_DIR
      NAMES
        
      PATH_SUFFIXES
        
        kurento/modules/meetrixkurentohelloworld
    )
  endif ()

  list (APPEND KMSMEETRIXKURENTOHELLOWORLD_INCLUDE_DIRS ${KMSMEETRIXKURENTOHELLOWORLD_IMPLEMENTATION_EXTRA_INCLUDE_DIR})
  list (APPEND REQUIRED_VARS KMSMEETRIXKURENTOHELLOWORLD_IMPLEMENTATION_EXTRA_INCLUDE_DIR)
endif ()

if (NOT "" STREQUAL "")
  if (TARGET kmsmeetrixkurentohelloworldinterface)
    set (KMSMEETRIXKURENTOHELLOWORLD_INTERFACE_EXTRA_INCLUDE_DIR "${KMSMEETRIXKURENTOHELLOWORLD_SOURCE_DIR_PREFIX}/")
  else ()
    find_path(KMSMEETRIXKURENTOHELLOWORLD_INTERFACE_EXTRA_INCLUDE_DIR
      NAMES
        
      PATH_SUFFIXES
        
        kurento/modules/meetrixkurentohelloworld
    )
  endif()

  list (APPEND KMSMEETRIXKURENTOHELLOWORLD_INCLUDE_DIRS ${KMSMEETRIXKURENTOHELLOWORLD_INTERFACE_EXTRA_INCLUDE_DIR})
  list (APPEND REQUIRED_VARS KMSMEETRIXKURENTOHELLOWORLD_INTERFACE_EXTRA_INCLUDE_DIR)
endif ()

if (TARGET kmsmeetrixkurentohelloworldimpl)
  set (KMSMEETRIXKURENTOHELLOWORLD_LIBRARY kmsmeetrixkurentohelloworldimpl)
else ()
  find_library (KMSMEETRIXKURENTOHELLOWORLD_LIBRARY
    NAMES
      kmsmeetrixkurentohelloworldimpl
    PATH_SUFFIXES
      ${KMSMEETRIXKURENTOHELLOWORLD_BINARY_DIR_PREFIX}/src/server
  )
endif()

set (REQUIRED_LIBS "")
foreach (LIB ${REQUIRED_LIBS})
  string(FIND ${LIB} " " POS)

  if (${POS} GREATER 0)
    string(REPLACE " " ";" REQUIRED_LIB_LIST ${LIB})
    include (CMakeParseArguments)
    cmake_parse_arguments("PARAM" "" "LIBNAME" "" ${REQUIRED_LIB_LIST})

    if (DEFINED PARAM_LIBNAME)
      generic_find (${REQUIRED_LIB_LIST} REQUIRED)
      set (LIB_NAME ${PARAM_LIBNAME})
    else()
      string (SUBSTRING ${LIB} 0 ${POS} LIB_NAME)
      string (SUBSTRING ${LIB} ${POS} -1 LIB_VERSION)
      string (STRIP ${LIB_NAME} LIB_NAME)
      string (STRIP ${LIB_VERSION} LIB_VERSION)
      generic_find (LIBNAME ${LIB_NAME} REQUIRED VERSION "${LIB_VERSION}")
    endif()
  else ()
    string (STRIP ${LIB} LIB_NAME)
    generic_find (LIBNAME ${LIB_NAME} REQUIRED)
  endif ()
  list (APPEND REQUIRED_LIBRARIES ${${LIB_NAME}_LIBRARIES})
  list (APPEND KMSMEETRIXKURENTOHELLOWORLD_INCLUDE_DIRS ${${LIB_NAME}_INCLUDE_DIRS})

endforeach()

set(KMSMEETRIXKURENTOHELLOWORLD_INCLUDE_DIRS
  ${KMSMEETRIXKURENTOHELLOWORLD_INCLUDE_DIRS}
  CACHE INTERNAL "Include directories for KMSMEETRIXKURENTOHELLOWORLD library" FORCE
)

set (KMSMEETRIXKURENTOHELLOWORLD_LIBRARIES
  ${KMSMEETRIXKURENTOHELLOWORLD_LIBRARY}
  ${KMSCORE_LIBRARIES}
  ${KMSELEMENTS_LIBRARIES}
  ${KMSFILTERS_LIBRARIES}
  ${REQUIRED_LIBRARIES}
  CACHE INTERNAL "Libraries for KMSMEETRIXKURENTOHELLOWORLD" FORCE
)

include (FindPackageHandleStandardArgs)

find_package_handle_standard_args(KMSMEETRIXKURENTOHELLOWORLD
  FOUND_VAR
    KMSMEETRIXKURENTOHELLOWORLD_FOUND
  REQUIRED_VARS
    ${REQUIRED_VARS}
  VERSION_VAR
    KMSMEETRIXKURENTOHELLOWORLD_VERSION
)

mark_as_advanced(
  KMSMEETRIXKURENTOHELLOWORLD_FOUND
  KMSMEETRIXKURENTOHELLOWORLD_VERSION
  KMSMEETRIXKURENTOHELLOWORLD_INTERFACE_INCLUDE_DIR
  KMSMEETRIXKURENTOHELLOWORLD_IMPLEMENTATION_INTERNAL_INCLUDE_DIR
  KMSMEETRIXKURENTOHELLOWORLD_IMPLEMENTATION_GENERATED_INCLUDE_DIR
  KMSMEETRIXKURENTOHELLOWORLD_IMPLEMENTATION_EXTRA_INCLUDE_DIR
  KMSMEETRIXKURENTOHELLOWORLD_INTERFACE_EXTRA_INCLUDE_DIR
  KMSMEETRIXKURENTOHELLOWORLD_INCLUDE_DIRS
  KMSMEETRIXKURENTOHELLOWORLD_LIBRARY
  KMSMEETRIXKURENTOHELLOWORLD_LIBRARIES
)
